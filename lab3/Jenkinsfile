pipeline {
  
  // Lab 3
  // look for drift across builds
  
  environment {
    //
    // this should be fairly unique, it doesn't need to be perfect
    // since we're not going to push this anywhere
    //
    IMAGE1 = "${JOB_BASE_NAME}-1:${BUILD_NUMBER}"
    IMAGE2 = "${JOB_BASE_NAME}-2:${BUILD_NUMBER}"
  } // end environment
  
  agent any
  stages {
    
    stage('Checkout SCM') {
      steps {
        checkout scm
      } // end steps
    } // end stage "checkout scm"

    stage('Install and Verify Tools') {
      steps {
        sh '''
          ### if docker isn't available, just bail 
          ### (correcting this is a bigger problem outside the scope of this workshop)
          which docker   
          ### make sure syft is available, and if not, download and install 
          if [ ! $(which syft) ]; then
            curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b ${HOME}/.local/bin
          fi
          ### same for grype
          if [ ! $(which grype) ]; then
            curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b ${HOME}/.local/bin
          fi
          PATH=${HOME}/.local/bin:${PATH}
          # setting PATH here isn't really necessary since we're just going to exit this sh step anyway but it's
          # a good reminder that it needs to be done when we actually need syft and grype
          #
          # also, we can go ahead and sanity check that the tools were installed correctly:
          which syft
          which grype
          # finally, let's make sure there's no old sboms laying around (just so our build artifacts are clean)
          rm -f *sbom*
        '''
      } // end steps
    } // end stage "install and verify tools"
        
    stage('Build image 1 and tag with build number') {
      steps {
        sh '''
          docker build --network=host --file=lab3/Dockerfile1 -t ${IMAGE1} .
        '''  
      } // end steps
    } // end stage "build image and tag w build number"
        
    stage('Analyze Image 1 with syft') {
      steps {
        // run syft, output in both json and text formats
        //
        // note: setting PATH here like this will work regardless of whether syft/grype 
        // were installed before we ran this pipeline or during the pipeline execution
        sh '''
          # set the PATH just to be sure
          PATH=${HOME}/.local/bin:${PATH}
          # run syft and output both json and text files.
          syft --output json=${IMAGE1}-sbom.json --output table=${IMAGE1}-sbom.txt --output spdx-json=${IMAGE1}-spdx-sbom.json --output cyclonedx-json=${IMAGE1}-cyclonedx-sbom.json ${IMAGE1}
        '''
      } // end steps
    } // end stage "analyze with syft"
    
    stage('Build image 2 and tag with build number') {
      steps {
        sh '''
          docker build --network=host --file=lab3/Dockerfile2 -t ${IMAGE2} .
        '''  
      } // end steps
    } // end stage "build image and tag w build number"
        
    stage('Analyze Image 2 with syft') {
      steps {
        // run syft, output in both json and text formats
        //
        // note: setting PATH here like this will work regardless of whether syft/grype 
        // were installed before we ran this pipeline or during the pipeline execution
        sh '''
          # set the PATH just to be sure
          PATH=${HOME}/.local/bin:${PATH}
          # run syft and output both json and text files.
          syft --output json=${IMAGE2}-sbom.json --output table=${IMAGE2}-sbom.txt --output spdx-json=${IMAGE2}-spdx-sbom.json --output cyclonedx-json=${IMAGE2}-cyclonedx-sbom.json ${IMAGE2}         '''
      } // end steps
    } // end stage "analyze with syft"
    
    stage('Compare SBOMs for drift detection') {
      steps {
        sh '''
          diff ${IMAGE1}-sbom.txt ${IMAGE2}-sbom.txt || true
          ### note: diff will exit with a non-zero code if there are any diffs, using "|| true" masks this so the pipeline won't break
          ### in a situation where you actually did not want to permit particular drift, you would omit that.
        '''
      } // end steps
    } // end stage "Compare SBOMs"

  } // end stages
  
  post {
    always {
      // archive the sbom
      archiveArtifacts artifacts: '*sbom*'
      // and, just to be sure, let's clean up after ourselves, 
      // remove any sboms we've created from the workspace
      sh 'rm -f *sbom*'
    } // end always
  } //end post

} //end pipeline
