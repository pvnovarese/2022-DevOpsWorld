pipeline {
  
  // Lab 1
  // let's build an image and then immmediately create an SBOM
  
  environment {
    //
    // this should be fairly unique, it doesn't need to be perfect
    // since we're not going to push this anywhere
    //
    IMAGE = "${JOB_BASE_NAME}:${GIT_BRANCH.split("/")[1]}-${BUILD_NUMBER}"
    SBOM_NAME = "${JOB_BASE_NAME}-${BUILD_NUMBER}-sbom"

    //
  } // end environment
  
  agent any
  stages {
    
    stage('Checkout SCM') {
      steps {
        checkout scm
      } // end steps
    } // end stage "checkout scm"

    stage('Install and Verify Tools') {
      steps {
        sh '''
          ### if docker isn't available, just bail 
          ### (correcting this is a bigger problem outside the scope of this workshop)
          which docker   
          ### make sure syft is available, and if not, download and install 
          if [ ! $(which syft) ]; then
            curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b ${HOME}/.local/bin
          fi
          ### same for grype
          if [ ! $(which grype) ]; then
            curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b ${HOME}/.local/bin
          fi
          PATH=${HOME}/.local/bin:${PATH}
          # setting PATH here isn't really necessary since we're just going to exit this sh step anyway but it's
          # a good reminder that it needs to be done when we actually need syft and grype
          #
          # also, we can go ahead and sanity check that the tools were installed correctly:
          which syft
          which grype
        '''
      } // end steps
    } // end stage "install and verify tools"
        
    stage('Build image and tag with build number') {
      steps {
        sh '''
          docker build --network=host --file lab1/Dockerfile -t ${IMAGE} .
        '''  
      } // end steps
    } // end stage "build image and tag w build number"
    
    //
    //
    // NEW in this lab!
    // generate the SBOM!
    //
    
    stage('Analyze with syft') {
      steps {
        // run syft, output in both json and text formats
        //
        // note: setting PATH here like this will work regardless of whether syft/grype 
        // were installed before we ran this pipeline or during the pipeline execution
        sh '''
          # first, let's make sure there's no old sboms laying around (just so our build artifacts are clean)
          rm *sbom*
          PATH=${HOME}/.local/bin:${PATH}
          syft --output json=${SBOM_NAME}.json --output table=${SBOM_NAME}.txt ${IMAGE} 
         '''
      } // end steps
    } // end stage "analyze with syft"

  } // end stages

    //
    //
    // NEW in this lab!
    // post section for archiving any artifacts
    //
    //

  post {
    always {
      // archive the sbom 
      archiveArtifacts artifacts: '*sbom*'
      // delete the images locally (optional, if you do this you'll lose a lot of cache speed gains when building)
      // sh 'docker image rm ${IMAGE} || failure=1'
    } // end always
  } //end post

} //end pipeline
